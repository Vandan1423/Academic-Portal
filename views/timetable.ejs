<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Timetable</title>
    <link rel="stylesheet" href="/navbar.css">
    <link rel="stylesheet" href="/timetable.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <%- include("partials/navbar") %>
    <div class="content">
        <h1><i class="fas fa-calendar-alt"></i> Class Timetable</h1>
        <p>View your daily class schedule and upcoming sessions.</p>

        <!-- Timetable Display -->
        <div class="timetable-section">
            <div class="timetable-controls">
                <button id="refreshTimetable" class="btn btn-primary">
                    <i class="fas fa-sync-alt"></i> Refresh Timetable
                </button>
                <button id="printTimetable" class="btn btn-secondary">
                    <i class="fas fa-print"></i> Print Schedule
                </button>
            </div>
            
            <div class="timetable-container">
                <div class="timetable-grid" id="timetableGrid">
                    <!-- Timetable will be dynamically generated here -->
                </div>
            </div>
        </div>

        <!-- Today's Schedule -->
        <div class="today-schedule">
            <h2><i class="fas fa-calendar-day"></i> Today's Schedule</h2>
            <div class="today-classes" id="todayClasses">
                <!-- Today's classes will be displayed here -->
            </div>
        </div>

        <!-- Upcoming Classes -->
        <div class="upcoming-classes">
            <h2><i class="fas fa-clock"></i> Upcoming Classes</h2>
            <div class="upcoming-list" id="upcomingList">
                <!-- Upcoming classes will be displayed here -->
            </div>
        </div>
    </div>

    <script>
        let facultyClasses = [];
        let currentDay = new Date().toLocaleDateString('en-US', { weekday: 'long' });

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadFacultyTimetable();
            renderTimetable();
            showTodaySchedule();
            showUpcomingClasses();
        });

        // Load faculty timetable data
        function loadFacultyTimetable() {
            // Try to get faculty timetable data from localStorage (shared storage)
            let storedClasses = localStorage.getItem('sharedTimetable');
            if (!storedClasses) {
                // Fallback to faculty-specific storage
                storedClasses = localStorage.getItem('facultyClasses');
            }
            
            if (storedClasses) {
                facultyClasses = JSON.parse(storedClasses);
            } else {
                // If no faculty data, show sample data
                facultyClasses = [
                    {
                        id: 1,
                        subject: "Mathematics",
                        day: "Monday",
                        startTime: "09:00",
                        endTime: "10:00",
                        room: "Room 101",
                        grade: "Grade 11",
                        teacher: "Dr. Smith"
                    },
                    {
                        id: 2,
                        subject: "Physics",
                        day: "Monday",
                        startTime: "10:00",
                        endTime: "11:00",
                        room: "Room 102",
                        grade: "Grade 11",
                        teacher: "Prof. Johnson"
                    },
                    {
                        id: 3,
                        subject: "Chemistry",
                        day: "Tuesday",
                        startTime: "09:00",
                        endTime: "10:00",
                        room: "Lab 201",
                        grade: "Grade 11",
                        teacher: "Dr. Brown"
                    },
                    {
                        id: 4,
                        subject: "English",
                        day: "Wednesday",
                        startTime: "09:00",
                        endTime: "10:00",
                        room: "Room 103",
                        grade: "Grade 11",
                        teacher: "Ms. Davis"
                    },
                    {
                        id: 5,
                        subject: "Computer Science",
                        day: "Thursday",
                        startTime: "09:00",
                        endTime: "10:00",
                        room: "Computer Lab",
                        grade: "Grade 11",
                        teacher: "Mr. Wilson"
                    }
                ];
            }
        }

        // Render timetable
        function renderTimetable() {
            const timetableGrid = document.getElementById('timetableGrid');
            const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
            const timeSlots = ['8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00'];
            
            let html = '<div class="timetable-header">';
            html += '<div class="time-slot-header">Time</div>';
            days.forEach(day => {
                html += `<div class="day-header">${day}</div>`;
            });
            html += '</div>';
            
            timeSlots.forEach(time => {
                html += '<div class="timetable-row">';
                html += `<div class="time-slot">${time}</div>`;
                
                days.forEach(day => {
                    const classItem = facultyClasses.find(c => c.day === day && c.startTime === time);
                    if (classItem) {
                        html += `
                            <div class="class-slot student-class">
                                <div class="class-subject">${classItem.subject}</div>
                                <div class="class-details">${classItem.room}</div>
                                <div class="class-teacher">${classItem.teacher}</div>
                                <div class="class-time">${classItem.startTime} - ${classItem.endTime}</div>
                            </div>
                        `;
                    } else {
                        html += '<div class="empty-slot"></div>';
                    }
                });
                html += '</div>';
            });
            
            timetableGrid.innerHTML = html;
        }

        // Show today's schedule
        function showTodaySchedule() {
            const todayClasses = facultyClasses.filter(c => c.day === currentDay);
            const todayContainer = document.getElementById('todayClasses');
            
            if (todayClasses.length === 0) {
                todayContainer.innerHTML = '<p class="no-classes">No classes scheduled for today.</p>';
                return;
            }
            
            let html = '';
            todayClasses.sort((a, b) => a.startTime.localeCompare(b.startTime)).forEach(classItem => {
                const isNext = isNextClass(classItem);
                html += `
                    <div class="today-class ${isNext ? 'next-class' : ''}">
                        <div class="class-time-info">
                            <div class="class-time">${classItem.startTime} - ${classItem.endTime}</div>
                            ${isNext ? '<span class="next-indicator">Next Class</span>' : ''}
                        </div>
                        <div class="class-info">
                            <h3>${classItem.subject}</h3>
                            <p><i class="fas fa-map-marker-alt"></i> ${classItem.room}</p>
                            <p><i class="fas fa-user"></i> ${classItem.teacher}</p>
                        </div>
                        <div class="class-actions">
                            <button class="btn btn-small btn-primary" onclick="setReminder('${classItem.subject}', '${classItem.startTime}')">
                                <i class="fas fa-bell"></i> Set Reminder
                            </button>
                        </div>
                    </div>
                `;
            });
            
            todayContainer.innerHTML = html;
        }

        // Show upcoming classes
        function showUpcomingClasses() {
            const upcomingContainer = document.getElementById('upcomingList');
            const now = new Date();
            const currentTime = now.getHours().toString().padStart(2, '0') + ':' + now.getMinutes().toString().padStart(2, '0');
            
            // Get classes for the next few days
            const upcomingClasses = [];
            const dayOrder = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
            const currentDayIndex = dayOrder.indexOf(currentDay);
            
            for (let i = 0; i < 7; i++) {
                const dayIndex = (currentDayIndex + i) % 7;
                const day = dayOrder[dayIndex];
                const dayClasses = facultyClasses.filter(c => c.day === day);
                
                dayClasses.forEach(classItem => {
                    if (i === 0 && classItem.startTime <= currentTime) return; // Skip past classes today
                    
                    upcomingClasses.push({
                        ...classItem,
                        daysFromNow: i
                    });
                });
            }
            
            if (upcomingClasses.length === 0) {
                upcomingContainer.innerHTML = '<p class="no-upcoming">No upcoming classes scheduled.</p>';
                return;
            }
            
            let html = '';
            upcomingClasses.slice(0, 5).forEach(classItem => {
                const dayText = classItem.daysFromNow === 0 ? 'Today' : 
                               classItem.daysFromNow === 1 ? 'Tomorrow' : 
                               `In ${classItem.daysFromNow} days`;
                
                html += `
                    <div class="upcoming-class">
                        <div class="upcoming-date">
                            <div class="day-text">${dayText}</div>
                            <div class="time-text">${classItem.startTime}</div>
                        </div>
                        <div class="upcoming-info">
                            <h3>${classItem.subject}</h3>
                            <p><i class="fas fa-map-marker-alt"></i> ${classItem.room}</p>
                            <p><i class="fas fa-user"></i> ${classItem.teacher}</p>
                        </div>
                    </div>
                `;
            });
            
            upcomingContainer.innerHTML = html;
        }

        // Check if a class is the next class
        function isNextClass(classItem) {
            const now = new Date();
            const currentTime = now.getHours().toString().padStart(2, '0') + ':' + now.getMinutes().toString().padStart(2, '0');
            return classItem.startTime > currentTime;
        }

        // Set reminder for a class
        function setReminder(subject, time) {
            if ('Notification' in window && Notification.permission === 'granted') {
                new Notification(`Class Reminder`, {
                    body: `${subject} starts at ${time}`,
                    icon: '/favicon.ico'
                });
            } else {
                alert(`Reminder set for ${subject} at ${time}`);
            }
        }

        // Refresh timetable
        document.getElementById('refreshTimetable').addEventListener('click', function() {
            loadFacultyTimetable();
            renderTimetable();
            showTodaySchedule();
            showUpcomingClasses();
            showNotification('Timetable refreshed successfully!', 'success');
        });

        // Print timetable
        document.getElementById('printTimetable').addEventListener('click', function() {
            window.print();
        });

        // Show notification
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i>
                ${message}
            `;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // Request notification permission
        if ('Notification' in window) {
            Notification.requestPermission();
        }
    </script>
</body>
</html>