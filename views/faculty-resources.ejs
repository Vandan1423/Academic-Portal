<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Resource Management - Faculty Portal</title>
    <link rel="stylesheet" href="/navbar.css">
    <link rel="stylesheet" href="/faculty.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <%- include("partials/navbar") %>
    <div class="content">
        <h1><i class="fas fa-file-alt"></i> Resource Management</h1>
        <p>Upload, organize, and manage educational resources for your students.</p>

        <!-- Upload Section -->
        <div class="upload-section">
            <h2><i class="fas fa-cloud-upload-alt"></i> Upload New Resource</h2>
            <form id="uploadForm" class="upload-form">
                <div class="upload-grid">
                    <div class="form-group">
                        <label for="resourceTitle">Resource Title:</label>
                        <input type="text" id="resourceTitle" name="title" placeholder="Enter resource title" required>
                    </div>
                    <div class="form-group">
                        <label for="resourceSubject">Subject:</label>
                        <select id="resourceSubject" name="subject" required>
                            <option value="">Select Subject</option>
                            <option value="Mathematics">Mathematics</option>
                            <option value="Physics">Physics</option>
                            <option value="Chemistry">Chemistry</option>
                            <option value="Biology">Biology</option>
                            <option value="English">English</option>
                            <option value="History">History</option>
                            <option value="Geography">Geography</option>
                            <option value="Computer Science">Computer Science</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="resourceType">Resource Type:</label>
                        <select id="resourceType" name="type" required>
                            <option value="">Select Type</option>
                            <option value="Document">Document (PDF, DOC)</option>
                            <option value="Presentation">Presentation (PPT)</option>
                            <option value="Video">Video</option>
                            <option value="Image">Image</option>
                            <option value="Link">External Link</option>
                            <option value="Quiz">Quiz/Assignment</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="resourceGrade">Target Grade:</label>
                        <select id="resourceGrade" name="grade" required>
                            <option value="">Select Grade</option>
                            <option value="All Grades">All Grades</option>
                            <option value="Grade 9">Grade 9</option>
                            <option value="Grade 10">Grade 10</option>
                            <option value="Grade 11">Grade 11</option>
                            <option value="Grade 12">Grade 12</option>
                        </select>
                    </div>
                    <div class="form-group full-width">
                        <label for="resourceDescription">Description:</label>
                        <textarea id="resourceDescription" name="description" placeholder="Describe the resource content and learning objectives" rows="3"></textarea>
                    </div>
                    <div class="form-group full-width">
                        <label for="resourceFile">Upload File:</label>
                        <div class="file-upload-area" id="fileUploadArea">
                            <i class="fas fa-cloud-upload-alt"></i>
                            <p>Drag and drop files here or click to browse</p>
                            <input type="file" id="resourceFile" name="file" accept=".pdf,.doc,.docx,.ppt,.pptx,.jpg,.jpeg,.png,.mp4,.mov">
                        </div>
                    </div>
                    <div class="form-group full-width">
                        <label for="resourceUrl">External URL (if applicable):</label>
                        <input type="url" id="resourceUrl" name="url" placeholder="https://example.com/resource">
                    </div>
                </div>
                <div class="upload-actions">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-upload"></i> Upload Resource
                    </button>
                    <button type="reset" class="btn btn-secondary">
                        <i class="fas fa-undo"></i> Reset Form
                    </button>
                </div>
            </form>
        </div>

        <!-- Resource Statistics -->
        <div class="resource-stats">
            <h2><i class="fas fa-chart-pie"></i> Resource Statistics</h2>
            <div class="stats-grid">
                <div class="stat-card">
                    <i class="fas fa-file"></i>
                    <h3>Total Resources</h3>
                    <div class="stat-value" id="totalResources">0</div>
                </div>
                <div class="stat-card">
                    <i class="fas fa-download"></i>
                    <h3>Total Downloads</h3>
                    <div class="stat-value" id="totalDownloads">0</div>
                </div>
                <div class="stat-card">
                    <i class="fas fa-eye"></i>
                    <h3>Total Views</h3>
                    <div class="stat-value" id="totalViews">0</div>
                </div>
                <div class="stat-card">
                    <i class="fas fa-clock"></i>
                    <h3>Recent Uploads</h3>
                    <div class="stat-value" id="recentUploads">0</div>
                </div>
            </div>
        </div>

        <!-- Resource Management -->
        <div class="resource-management">
            <h2><i class="fas fa-folder-open"></i> Resource Library</h2>
            
            <!-- Search and Filter -->
            <div class="resource-controls">
                <div class="search-box">
                    <input type="text" id="resourceSearch" placeholder="Search resources...">
                    <button id="searchBtn" class="btn btn-primary">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
                <div class="filter-controls">
                    <select id="subjectFilter">
                        <option value="">All Subjects</option>
                        <option value="Mathematics">Mathematics</option>
                        <option value="Physics">Physics</option>
                        <option value="Chemistry">Chemistry</option>
                        <option value="Biology">Biology</option>
                        <option value="English">English</option>
                        <option value="History">History</option>
                        <option value="Geography">Geography</option>
                        <option value="Computer Science">Computer Science</option>
                    </select>
                    <select id="typeFilter">
                        <option value="">All Types</option>
                        <option value="Document">Document</option>
                        <option value="Presentation">Presentation</option>
                        <option value="Video">Video</option>
                        <option value="Image">Image</option>
                        <option value="Link">Link</option>
                        <option value="Quiz">Quiz</option>
                    </select>
                    <button id="clearFilters" class="btn btn-secondary">
                        <i class="fas fa-times"></i> Clear Filters
                    </button>
                </div>
            </div>

            <!-- Resource Grid -->
            <div class="resource-grid" id="resourceGrid">
                <!-- Resources will be dynamically loaded here -->
            </div>
        </div>

        <!-- Popular Resources -->
        <div class="popular-resources">
            <h2><i class="fas fa-star"></i> Popular Resources</h2>
            <div class="popular-grid">
                <div class="popular-card">
                    <div class="popular-icon">
                        <i class="fas fa-file-pdf"></i>
                    </div>
                    <div class="popular-info">
                        <h3>Calculus Fundamentals</h3>
                        <p>Mathematics • Grade 11</p>
                        <div class="popular-stats">
                            <span><i class="fas fa-download"></i> 156 downloads</span>
                            <span><i class="fas fa-eye"></i> 342 views</span>
                        </div>
                    </div>
                </div>
                <div class="popular-card">
                    <div class="popular-icon">
                        <i class="fas fa-file-powerpoint"></i>
                    </div>
                    <div class="popular-info">
                        <h3>Physics Lab Guide</h3>
                        <p>Physics • Grade 10</p>
                        <div class="popular-stats">
                            <span><i class="fas fa-download"></i> 89 downloads</span>
                            <span><i class="fas fa-eye"></i> 234 views</span>
                        </div>
                    </div>
                </div>
                <div class="popular-card">
                    <div class="popular-icon">
                        <i class="fas fa-video"></i>
                    </div>
                    <div class="popular-info">
                        <h3>Chemistry Experiments</h3>
                        <p>Chemistry • Grade 12</p>
                        <div class="popular-stats">
                            <span><i class="fas fa-download"></i> 67 downloads</span>
                            <span><i class="fas fa-eye"></i> 189 views</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Resource Modal -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2><i class="fas fa-edit"></i> Edit Resource</h2>
            <form id="editResourceForm">
                <input type="hidden" id="editResourceId">
                <div class="form-grid">
                    <div class="form-group">
                        <label for="editTitle">Resource Title:</label>
                        <input type="text" id="editTitle" name="title" required>
                    </div>
                    <div class="form-group">
                        <label for="editSubject">Subject:</label>
                        <select id="editSubject" name="subject" required>
                            <option value="Mathematics">Mathematics</option>
                            <option value="Physics">Physics</option>
                            <option value="Chemistry">Chemistry</option>
                            <option value="Biology">Biology</option>
                            <option value="English">English</option>
                            <option value="History">History</option>
                            <option value="Geography">Geography</option>
                            <option value="Computer Science">Computer Science</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editType">Resource Type:</label>
                        <select id="editType" name="type" required>
                            <option value="Document">Document</option>
                            <option value="Presentation">Presentation</option>
                            <option value="Video">Video</option>
                            <option value="Image">Image</option>
                            <option value="Link">Link</option>
                            <option value="Quiz">Quiz</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editGrade">Target Grade:</label>
                        <select id="editGrade" name="grade" required>
                            <option value="All Grades">All Grades</option>
                            <option value="Grade 9">Grade 9</option>
                            <option value="Grade 10">Grade 10</option>
                            <option value="Grade 11">Grade 11</option>
                            <option value="Grade 12">Grade 12</option>
                        </select>
                    </div>
                    <div class="form-group full-width">
                        <label for="editDescription">Description:</label>
                        <textarea id="editDescription" name="description" rows="3"></textarea>
                    </div>
                    <div class="form-group full-width">
                        <label for="editUrl">External URL:</label>
                        <input type="url" id="editUrl" name="url">
                    </div>
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Save Changes
                    </button>
                    <button type="button" class="btn btn-secondary" onclick="closeEditModal()">
                        <i class="fas fa-times"></i> Cancel
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        let resources = JSON.parse(localStorage.getItem('facultyResources')) || [];
        let currentEditId = null;

        // Sample resources for demonstration
        const sampleResources = [
            {
                id: 1,
                title: "Calculus Fundamentals",
                subject: "Mathematics",
                type: "Document",
                grade: "Grade 11",
                description: "Comprehensive guide to calculus basics including limits, derivatives, and integrals.",
                url: "",
                file: "calculus_fundamentals.pdf",
                uploadDate: "2024-01-15",
                downloads: 156,
                views: 342,
                teacher: "Dr. Smith"
            },
            {
                id: 2,
                title: "Physics Lab Guide",
                subject: "Physics",
                type: "Presentation",
                grade: "Grade 10",
                description: "Step-by-step guide for conducting physics laboratory experiments safely.",
                url: "",
                file: "physics_lab_guide.pptx",
                uploadDate: "2024-01-10",
                downloads: 89,
                views: 234,
                teacher: "Prof. Johnson"
            },
            {
                id: 3,
                title: "Chemistry Experiments",
                subject: "Chemistry",
                type: "Video",
                grade: "Grade 12",
                description: "Video demonstrations of advanced chemistry experiments and procedures.",
                url: "https://youtube.com/watch?v=example",
                file: "",
                uploadDate: "2024-01-08",
                downloads: 67,
                views: 189,
                teacher: "Dr. Brown"
            }
        ];

        // Initialize with sample data if no data exists
        if (resources.length === 0) {
            resources = sampleResources;
            saveResources();
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            renderResources();
            updateStats();
            setupFileUpload();
        });

        // File upload setup
        function setupFileUpload() {
            const fileUploadArea = document.getElementById('fileUploadArea');
            const fileInput = document.getElementById('resourceFile');

            fileUploadArea.addEventListener('click', () => fileInput.click());
            fileUploadArea.addEventListener('dragover', (e) => {
                e.preventDefault();
                fileUploadArea.classList.add('dragover');
            });
            fileUploadArea.addEventListener('dragleave', () => {
                fileUploadArea.classList.remove('dragover');
            });
            fileUploadArea.addEventListener('drop', (e) => {
                e.preventDefault();
                fileUploadArea.classList.remove('dragover');
                const files = e.dataTransfer.files;
                if (files.length > 0) {
                    fileInput.files = files;
                    updateFileDisplay(files[0]);
                }
            });

            fileInput.addEventListener('change', (e) => {
                if (e.target.files.length > 0) {
                    updateFileDisplay(e.target.files[0]);
                }
            });
        }

        function updateFileDisplay(file) {
            const fileUploadArea = document.getElementById('fileUploadArea');
            fileUploadArea.innerHTML = `
                <i class="fas fa-file"></i>
                <p>${file.name}</p>
                <small>${(file.size / 1024 / 1024).toFixed(2)} MB</small>
            `;
        }

        // Upload form submission
        document.getElementById('uploadForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const newResource = {
                id: Date.now(),
                title: formData.get('title'),
                subject: formData.get('subject'),
                type: formData.get('type'),
                grade: formData.get('grade'),
                description: formData.get('description'),
                url: formData.get('url'),
                file: formData.get('file') ? formData.get('file').name : '',
                uploadDate: new Date().toISOString().split('T')[0],
                downloads: 0,
                views: 0,
                teacher: '<%= admin ? admin.name : "Teacher" %>'
            };

            resources.push(newResource);
            saveResources();
            renderResources();
            updateStats();
            e.target.reset();
            
            // Reset file upload area
            document.getElementById('fileUploadArea').innerHTML = `
                <i class="fas fa-cloud-upload-alt"></i>
                <p>Drag and drop files here or click to browse</p>
                <input type="file" id="resourceFile" name="file" accept=".pdf,.doc,.docx,.ppt,.pptx,.jpg,.jpeg,.png,.mp4,.mov">
            `;
            
            showNotification('Resource uploaded successfully!', 'success');
        });

        // Search and filter functionality
        document.getElementById('searchBtn').addEventListener('click', function() {
            const searchTerm = document.getElementById('resourceSearch').value.toLowerCase();
            const subjectFilter = document.getElementById('subjectFilter').value;
            const typeFilter = document.getElementById('typeFilter').value;
            
            filterResources(searchTerm, subjectFilter, typeFilter);
        });

        document.getElementById('subjectFilter').addEventListener('change', filterResources);
        document.getElementById('typeFilter').addEventListener('change', filterResources);

        document.getElementById('clearFilters').addEventListener('click', function() {
            document.getElementById('resourceSearch').value = '';
            document.getElementById('subjectFilter').value = '';
            document.getElementById('typeFilter').value = '';
            renderResources();
        });

        function filterResources() {
            const searchTerm = document.getElementById('resourceSearch').value.toLowerCase();
            const subjectFilter = document.getElementById('subjectFilter').value;
            const typeFilter = document.getElementById('typeFilter').value;
            
            let filteredResources = resources;
            
            if (searchTerm) {
                filteredResources = filteredResources.filter(resource =>
                    resource.title.toLowerCase().includes(searchTerm) ||
                    resource.description.toLowerCase().includes(searchTerm)
                );
            }
            
            if (subjectFilter) {
                filteredResources = filteredResources.filter(resource =>
                    resource.subject === subjectFilter
                );
            }
            
            if (typeFilter) {
                filteredResources = filteredResources.filter(resource =>
                    resource.type === typeFilter
                );
            }
            
            renderResourceGrid(filteredResources);
        }

        // Render resources
        function renderResources() {
            renderResourceGrid(resources);
        }

        function renderResourceGrid(resourcesToRender) {
            const resourceGrid = document.getElementById('resourceGrid');
            
            if (resourcesToRender.length === 0) {
                resourceGrid.innerHTML = '<p class="no-resources">No resources found.</p>';
                return;
            }
            
            let html = '';
            resourcesToRender.forEach(resource => {
                const iconClass = getResourceIcon(resource.type);
                html += `
                    <div class="resource-card">
                        <div class="resource-icon">
                            <i class="${iconClass}"></i>
                        </div>
                        <div class="resource-content">
                            <h3>${resource.title}</h3>
                            <p class="resource-meta">
                                <span class="subject-tag">${resource.subject}</span>
                                <span class="grade-tag">${resource.grade}</span>
                                <span class="type-tag">${resource.type}</span>
                            </p>
                            <p class="resource-description">${resource.description}</p>
                            <div class="resource-stats">
                                <span><i class="fas fa-download"></i> ${resource.downloads}</span>
                                <span><i class="fas fa-eye"></i> ${resource.views}</span>
                                <span><i class="fas fa-calendar"></i> ${resource.uploadDate}</span>
                            </div>
                        </div>
                        <div class="resource-actions">
                            <button onclick="viewResource(${resource.id})" class="btn btn-small btn-info">
                                <i class="fas fa-eye"></i>
                            </button>
                            <button onclick="editResource(${resource.id})" class="btn btn-small btn-primary">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button onclick="deleteResource(${resource.id})" class="btn btn-small btn-danger">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </div>
                `;
            });
            
            resourceGrid.innerHTML = html;
        }

        function getResourceIcon(type) {
            const icons = {
                'Document': 'fas fa-file-pdf',
                'Presentation': 'fas fa-file-powerpoint',
                'Video': 'fas fa-video',
                'Image': 'fas fa-image',
                'Link': 'fas fa-link',
                'Quiz': 'fas fa-question-circle'
            };
            return icons[type] || 'fas fa-file';
        }

        // Update statistics
        function updateStats() {
            document.getElementById('totalResources').textContent = resources.length;
            
            const totalDownloads = resources.reduce((sum, r) => sum + r.downloads, 0);
            document.getElementById('totalDownloads').textContent = totalDownloads;
            
            const totalViews = resources.reduce((sum, r) => sum + r.views, 0);
            document.getElementById('totalViews').textContent = totalViews;
            
            const recentUploads = resources.filter(r => {
                const uploadDate = new Date(r.uploadDate);
                const weekAgo = new Date();
                weekAgo.setDate(weekAgo.getDate() - 7);
                return uploadDate >= weekAgo;
            }).length;
            document.getElementById('recentUploads').textContent = recentUploads;
        }

        // Resource actions
        function viewResource(resourceId) {
            const resource = resources.find(r => r.id === resourceId);
            if (resource) {
                resource.views++;
                saveResources();
                renderResources();
                
                if (resource.url) {
                    window.open(resource.url, '_blank');
                } else {
                    alert(`Resource: ${resource.title}\n\nDescription: ${resource.description}\n\nFile: ${resource.file || 'No file attached'}`);
                }
            }
        }

        function editResource(resourceId) {
            const resource = resources.find(r => r.id === resourceId);
            if (resource) {
                currentEditId = resourceId;
                document.getElementById('editResourceId').value = resourceId;
                document.getElementById('editTitle').value = resource.title;
                document.getElementById('editSubject').value = resource.subject;
                document.getElementById('editType').value = resource.type;
                document.getElementById('editGrade').value = resource.grade;
                document.getElementById('editDescription').value = resource.description;
                document.getElementById('editUrl').value = resource.url;
                
                document.getElementById('editModal').style.display = 'block';
            }
        }

        function deleteResource(resourceId) {
            if (confirm('Are you sure you want to delete this resource?')) {
                resources = resources.filter(r => r.id !== resourceId);
                saveResources();
                renderResources();
                updateStats();
                
                showNotification('Resource deleted successfully!', 'success');
            }
        }

        // Edit form submission
        document.getElementById('editResourceForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const resourceIndex = resources.findIndex(r => r.id === currentEditId);
            
            if (resourceIndex !== -1) {
                resources[resourceIndex] = {
                    ...resources[resourceIndex],
                    title: formData.get('title'),
                    subject: formData.get('subject'),
                    type: formData.get('type'),
                    grade: formData.get('grade'),
                    description: formData.get('description'),
                    url: formData.get('url')
                };
                
                saveResources();
                renderResources();
                closeEditModal();
                
                showNotification('Resource updated successfully!', 'success');
            }
        });

        // Modal functions
        function closeEditModal() {
            document.getElementById('editModal').style.display = 'none';
            currentEditId = null;
        }

        document.querySelector('.close').addEventListener('click', closeEditModal);
        window.addEventListener('click', function(event) {
            const modal = document.getElementById('editModal');
            if (event.target === modal) {
                closeEditModal();
            }
        });

        // Save resources to localStorage
        function saveResources() {
            localStorage.setItem('facultyResources', JSON.stringify(resources));
            // Also save to shared storage that students can access
            localStorage.setItem('sharedResources', JSON.stringify(resources));
        }

        // Show notification
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i>
                ${message}
            `;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }
    </script>
</body>
</html> 