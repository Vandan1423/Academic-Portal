<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Management - Faculty Portal</title>
    <link rel="stylesheet" href="/navbar.css">
    <link rel="stylesheet" href="/faculty.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body>
    <%- include("partials/navbar") %>
    <div class="content">
        <h1><i class="fas fa-users"></i> Student Management</h1>
        <p>View and manage student records and performance.</p>

        <!-- Search and Filter Section -->
        <div class="search-section">
            <h2><i class="fas fa-search"></i> Search & Filter</h2>
            <div class="search-controls">
                <div class="search-input">
                    <input type="text" id="studentSearch" placeholder="Search students by name or email...">
                    <button id="searchBtn" class="btn btn-primary">
                        <i class="fas fa-search"></i> Search
                    </button>
                </div>
                <div class="filter-controls">
                    <select id="gradeFilter">
                        <option value="">All Grades</option>
                        <option value="Grade 9">Grade 9</option>
                        <option value="Grade 10">Grade 10</option>
                        <option value="Grade 11">Grade 11</option>
                        <option value="Grade 12">Grade 12</option>
                    </select>
                    <select id="subjectFilter">
                        <option value="">All Subjects</option>
                        <option value="Mathematics">Mathematics</option>
                        <option value="Physics">Physics</option>
                        <option value="Chemistry">Chemistry</option>
                        <option value="Biology">Biology</option>
                        <option value="English">English</option>
                        <option value="History">History</option>
                        <option value="Geography">Geography</option>
                        <option value="Computer Science">Computer Science</option>
                    </select>
                    <button id="clearFilters" class="btn btn-secondary">
                        <i class="fas fa-times"></i> Clear Filters
                    </button>
                </div>
            </div>
        </div>

        <!-- Student Statistics -->
        <div class="stats-section">
            <h2><i class="fas fa-chart-bar"></i> Student Statistics</h2>
            <div class="stats-grid">
                <div class="stat-card">
                    <i class="fas fa-users"></i>
                    <h3>Total Students</h3>
                    <div class="stat-value" id="totalStudents">0</div>
                </div>
                <div class="stat-card">
                    <i class="fas fa-user-graduate"></i>
                    <h3>Active Students</h3>
                    <div class="stat-value" id="activeStudents">0</div>
                </div>
                <div class="stat-card">
                    <i class="fas fa-chart-line"></i>
                    <h3>Average Performance</h3>
                    <div class="stat-value" id="avgPerformance">0%</div>
                </div>
                <div class="stat-card">
                    <i class="fas fa-calendar-check"></i>
                    <h3>Attendance Rate</h3>
                    <div class="stat-value" id="attendanceRate">0%</div>
                </div>
            </div>
        </div>

        <!-- Student List -->
        <div class="students-section">
            <h2><i class="fas fa-list"></i> Student List</h2>
            <div class="students-controls">
                <button id="addStudent" class="btn btn-primary">
                    <i class="fas fa-user-plus"></i> Add New Student
                </button>
                <button id="exportStudents" class="btn btn-info">
                    <i class="fas fa-download"></i> Export List
                </button>
            </div>
            
            <div class="students-table-container">
                <table class="students-table" id="studentsTable">
                    <thead>
                        <tr>
                            <th><i class="fas fa-user"></i> Student Name</th>
                            <th><i class="fas fa-envelope"></i> Email</th>
                            <th><i class="fas fa-graduation-cap"></i> Grade</th>
                            <th><i class="fas fa-book"></i> Subjects</th>
                            <th><i class="fas fa-chart-line"></i> Performance</th>
                            <th><i class="fas fa-calendar-check"></i> Attendance</th>
                            <th><i class="fas fa-cogs"></i> Actions</th>
                        </tr>
                    </thead>
                    <tbody id="studentsTableBody">
                        <!-- Students will be dynamically loaded here -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Add/Edit Student Modal -->
    <div id="studentModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2 id="modalTitle"><i class="fas fa-user-plus"></i> Add New Student</h2>
            <form id="studentForm">
                <input type="hidden" id="studentId">
                <div class="form-grid">
                    <div class="form-group">
                        <label for="studentName">Full Name:</label>
                        <input type="text" id="studentName" name="name" required>
                    </div>
                    <div class="form-group">
                        <label for="studentEmail">Email:</label>
                        <input type="email" id="studentEmail" name="email" required>
                    </div>
                    <div class="form-group">
                        <label for="studentGrade">Grade:</label>
                        <select id="studentGrade" name="grade" required>
                            <option value="">Select Grade</option>
                            <option value="Grade 9">Grade 9</option>
                            <option value="Grade 10">Grade 10</option>
                            <option value="Grade 11">Grade 11</option>
                            <option value="Grade 12">Grade 12</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="studentSubjects">Subjects:</label>
                        <div class="checkbox-group">
                            <label><input type="checkbox" name="subjects" value="Mathematics"> Mathematics</label>
                            <label><input type="checkbox" name="subjects" value="Physics"> Physics</label>
                            <label><input type="checkbox" name="subjects" value="Chemistry"> Chemistry</label>
                            <label><input type="checkbox" name="subjects" value="Biology"> Biology</label>
                            <label><input type="checkbox" name="subjects" value="English"> English</label>
                            <label><input type="checkbox" name="subjects" value="History"> History</label>
                            <label><input type="checkbox" name="subjects" value="Geography"> Geography</label>
                            <label><input type="checkbox" name="subjects" value="Computer Science"> Computer Science</label>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Save Student
                    </button>
                    <button type="button" class="btn btn-secondary" onclick="closeStudentModal()">
                        <i class="fas fa-times"></i> Cancel
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        let students = JSON.parse(localStorage.getItem('facultyStudents')) || [];
        let currentEditId = null;

        // Sample data for demonstration
        const sampleStudents = [
            {
                id: 1,
                name: "John Smith",
                email: "john.smith@student.edu",
                grade: "Grade 11",
                subjects: ["Mathematics", "Physics", "Chemistry"],
                performance: 85,
                attendance: 92
            },
            {
                id: 2,
                name: "Sarah Johnson",
                email: "sarah.johnson@student.edu",
                grade: "Grade 10",
                subjects: ["Mathematics", "Biology", "English"],
                performance: 78,
                attendance: 88
            },
            {
                id: 3,
                name: "Michael Brown",
                email: "michael.brown@student.edu",
                grade: "Grade 12",
                subjects: ["Physics", "Chemistry", "Computer Science"],
                performance: 91,
                attendance: 95
            }
        ];

        // Initialize with sample data if no data exists
        if (students.length === 0) {
            students = sampleStudents;
            saveStudents();
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            renderStudents();
            updateStats();
        });

        // Search functionality
        document.getElementById('searchBtn').addEventListener('click', function() {
            const searchTerm = document.getElementById('studentSearch').value.toLowerCase();
            const gradeFilter = document.getElementById('gradeFilter').value;
            const subjectFilter = document.getElementById('subjectFilter').value;
            
            filterStudents(searchTerm, gradeFilter, subjectFilter);
        });

        // Filter functionality
        document.getElementById('gradeFilter').addEventListener('change', function() {
            const searchTerm = document.getElementById('studentSearch').value.toLowerCase();
            const gradeFilter = this.value;
            const subjectFilter = document.getElementById('subjectFilter').value;
            
            filterStudents(searchTerm, gradeFilter, subjectFilter);
        });

        document.getElementById('subjectFilter').addEventListener('change', function() {
            const searchTerm = document.getElementById('studentSearch').value.toLowerCase();
            const gradeFilter = document.getElementById('gradeFilter').value;
            const subjectFilter = this.value;
            
            filterStudents(searchTerm, gradeFilter, subjectFilter);
        });

        // Clear filters
        document.getElementById('clearFilters').addEventListener('click', function() {
            document.getElementById('studentSearch').value = '';
            document.getElementById('gradeFilter').value = '';
            document.getElementById('subjectFilter').value = '';
            renderStudents();
        });

        // Add new student
        document.getElementById('addStudent').addEventListener('click', function() {
            openStudentModal();
        });

        // Export students
        document.getElementById('exportStudents').addEventListener('click', function() {
            const dataStr = JSON.stringify(students, null, 2);
            const dataBlob = new Blob([dataStr], {type: 'application/json'});
            const url = URL.createObjectURL(dataBlob);
            const link = document.createElement('a');
            link.href = url;
            link.download = 'students.json';
            link.click();
        });

        // Student form submission
        document.getElementById('studentForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const selectedSubjects = Array.from(document.querySelectorAll('input[name="subjects"]:checked'))
                .map(checkbox => checkbox.value);
            
            if (currentEditId) {
                // Edit existing student
                const studentIndex = students.findIndex(s => s.id === currentEditId);
                if (studentIndex !== -1) {
                    students[studentIndex] = {
                        ...students[studentIndex],
                        name: formData.get('name'),
                        email: formData.get('email'),
                        grade: formData.get('grade'),
                        subjects: selectedSubjects
                    };
                }
            } else {
                // Add new student
                const newStudent = {
                    id: Date.now(),
                    name: formData.get('name'),
                    email: formData.get('email'),
                    grade: formData.get('grade'),
                    subjects: selectedSubjects,
                    performance: Math.floor(Math.random() * 30) + 70, // Random performance 70-100
                    attendance: Math.floor(Math.random() * 20) + 80   // Random attendance 80-100
                };
                students.push(newStudent);
            }
            
            saveStudents();
            renderStudents();
            updateStats();
            closeStudentModal();
            
            showNotification(
                currentEditId ? 'Student updated successfully!' : 'Student added successfully!', 
                'success'
            );
        });

        // Filter students
        function filterStudents(searchTerm, gradeFilter, subjectFilter) {
            let filteredStudents = students;
            
            if (searchTerm) {
                filteredStudents = filteredStudents.filter(student =>
                    student.name.toLowerCase().includes(searchTerm) ||
                    student.email.toLowerCase().includes(searchTerm)
                );
            }
            
            if (gradeFilter) {
                filteredStudents = filteredStudents.filter(student =>
                    student.grade === gradeFilter
                );
            }
            
            if (subjectFilter) {
                filteredStudents = filteredStudents.filter(student =>
                    student.subjects.includes(subjectFilter)
                );
            }
            
            renderStudentsTable(filteredStudents);
        }

        // Render students
        function renderStudents() {
            renderStudentsTable(students);
        }

        // Render students table
        function renderStudentsTable(studentsToRender) {
            const tbody = document.getElementById('studentsTableBody');
            
            if (studentsToRender.length === 0) {
                tbody.innerHTML = '<tr><td colspan="7" class="no-data">No students found.</td></tr>';
                return;
            }
            
            let html = '';
            studentsToRender.forEach(student => {
                html += `
                    <tr>
                        <td>
                            <div class="student-info">
                                <div class="student-name">${student.name}</div>
                                <div class="student-id">ID: ${student.id}</div>
                            </div>
                        </td>
                        <td>${student.email}</td>
                        <td><span class="grade-badge">${student.grade}</span></td>
                        <td>
                            <div class="subjects-list">
                                ${student.subjects.map(subject => `<span class="subject-tag">${subject}</span>`).join('')}
                            </div>
                        </td>
                        <td>
                            <div class="performance-bar">
                                <div class="performance-fill" style="width: ${student.performance}%"></div>
                                <span>${student.performance}%</span>
                            </div>
                        </td>
                        <td>
                            <div class="attendance-indicator ${student.attendance >= 90 ? 'excellent' : student.attendance >= 80 ? 'good' : 'poor'}">
                                ${student.attendance}%
                            </div>
                        </td>
                        <td>
                            <div class="action-buttons">
                                <button onclick="editStudent(${student.id})" class="btn btn-small btn-primary">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button onclick="viewStudentDetails(${student.id})" class="btn btn-small btn-info">
                                    <i class="fas fa-eye"></i>
                                </button>
                                <button onclick="deleteStudent(${student.id})" class="btn btn-small btn-danger">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
            });
            
            tbody.innerHTML = html;
        }

        // Update statistics
        function updateStats() {
            document.getElementById('totalStudents').textContent = students.length;
            document.getElementById('activeStudents').textContent = students.filter(s => s.attendance >= 80).length;
            
            const avgPerformance = students.length > 0 
                ? Math.round(students.reduce((sum, s) => sum + s.performance, 0) / students.length)
                : 0;
            document.getElementById('avgPerformance').textContent = avgPerformance + '%';
            
            const avgAttendance = students.length > 0
                ? Math.round(students.reduce((sum, s) => sum + s.attendance, 0) / students.length)
                : 0;
            document.getElementById('attendanceRate').textContent = avgAttendance + '%';
        }

        // Edit student
        function editStudent(studentId) {
            const student = students.find(s => s.id === studentId);
            if (student) {
                currentEditId = studentId;
                document.getElementById('modalTitle').innerHTML = '<i class="fas fa-edit"></i> Edit Student';
                document.getElementById('studentId').value = studentId;
                document.getElementById('studentName').value = student.name;
                document.getElementById('studentEmail').value = student.email;
                document.getElementById('studentGrade').value = student.grade;
                
                // Clear all checkboxes first
                document.querySelectorAll('input[name="subjects"]').forEach(checkbox => {
                    checkbox.checked = false;
                });
                
                // Check the subjects the student is enrolled in
                student.subjects.forEach(subject => {
                    const checkbox = document.querySelector(`input[name="subjects"][value="${subject}"]`);
                    if (checkbox) checkbox.checked = true;
                });
                
                openStudentModal();
            }
        }

        // View student details
        function viewStudentDetails(studentId) {
            const student = students.find(s => s.id === studentId);
            if (student) {
                alert(`Student Details:\n\nName: ${student.name}\nEmail: ${student.email}\nGrade: ${student.grade}\nSubjects: ${student.subjects.join(', ')}\nPerformance: ${student.performance}%\nAttendance: ${student.attendance}%`);
            }
        }

        // Delete student
        function deleteStudent(studentId) {
            if (confirm('Are you sure you want to delete this student?')) {
                students = students.filter(s => s.id !== studentId);
                saveStudents();
                renderStudents();
                updateStats();
                
                showNotification('Student deleted successfully!', 'success');
            }
        }

        // Modal functions
        function openStudentModal() {
            document.getElementById('studentModal').style.display = 'block';
        }

        function closeStudentModal() {
            document.getElementById('studentModal').style.display = 'none';
            document.getElementById('studentForm').reset();
            document.getElementById('modalTitle').innerHTML = '<i class="fas fa-user-plus"></i> Add New Student';
            currentEditId = null;
        }

        // Close modal when clicking on X or outside
        document.querySelector('.close').addEventListener('click', closeStudentModal);
        window.addEventListener('click', function(event) {
            const modal = document.getElementById('studentModal');
            if (event.target === modal) {
                closeStudentModal();
            }
        });

        // Save students to localStorage
        function saveStudents() {
            localStorage.setItem('facultyStudents', JSON.stringify(students));
        }

        // Show notification
        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : 'exclamation-circle'}"></i>
                ${message}
            `;
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }
    </script>
</body>
</html> 